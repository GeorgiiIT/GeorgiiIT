OpenShadingLanguage 1.00
# Compiled by oslc 1.10.9
# options: -IC:/Program Files/Autodesk/3ds Max 2021/OSL/
shader Noise	%meta{string,help,"A shader for generating more advanced noise"} 
param	point	UVW	0 0 0		%meta{string,help,"The UVW coordinate to use. When not connected, defaults to Object space"}  %read{2,2} %write{1,1} %derivs %initexpr
param	float	Scale	25		%read{2,2} %write{2147483647,-1} %derivs
param	string	Type	"uperlin"		%meta{string,widget,"popup"} %meta{string,help,"Use perlin, uperlin, cell, hash, simplex or gabor"} %meta{string,options,"perlin|uperlin|cell|hash|simplex|gabor"}  %read{13,13} %write{2147483647,-1}
param	int	Octaves	4		%meta{string,help,"Hos many layers of noise are mixed together"}  %read{8,8} %write{2147483647,-1}
param	float	Lacunarity	2		%meta{string,help,"How much the 'frequency' of the noise changes per layer"}  %read{19,19} %write{2147483647,-1} %derivs
param	float	Gain	0.5		%meta{string,help,"How much the amplitude of the noise changes per layer. Higher numbers means higher noise frequencies have more effect."}  %read{20,20} %write{2147483647,-1}
param	int	StepFunction	1		%meta{string,widget,"checkBox"} %meta{string,label,"Step Function"} %meta{string,help,"Enables a per-layer smoothstep curve in the noise, allowing you to increase the 'contrast' of the noise"}  %read{14,14} %write{2147483647,-1}
param	float	LowStep	0.5		%meta{string,help,"Low threshold of the smoothstep function."} %meta{string,label,"Low Step"} %meta{float,min,-1} %meta{float,max,1}  %read{15,15} %write{2147483647,-1}
param	float	HiStep	0.800000012		%meta{string,help,"High threshold of the smoothstep function."} %meta{string,label,"High Step"} %meta{float,min,-1} %meta{float,max,1}  %read{15,15} %write{2147483647,-1}
param	int	Normalize	1		%meta{string,widget,"checkBox"} %meta{string,help,"If the noise is auto-normalized to Amplitude or not."}  %read{23,23} %write{2147483647,-1}
param	float	Amplitude	1		%meta{string,help,"The amplitude of the noise."}  %read{5,24} %write{2147483647,-1}
param	float	Phase	0		%meta{string,help,"The 'Phase' is just a 4th coordinate of the noise, can be used to allow it to evolve over time, for example."}  %read{12,12} %write{2147483647,-1} %derivs
oparam	float	Out	0		%read{8,25} %write{8,25}
global	point	P	%read{1,1} %write{2147483647,-1} %derivs
local	point	pnt	%read{8,22} %write{2,2} %derivs
local	float	sum	%read{8,24} %write{3,22}
local	float	curFreq	%read{8,22} %write{4,22} %derivs
local	float	curAmp	%read{8,22} %write{5,22}
local	int	___325_i	%read{8,22} %write{7,22} %derivs
local	float	___326_ns	%read{8,22} %write{8,22}
const	string	$const1	"object"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	int	$const4	0		%read{3,9} %write{2147483647,-1}
const	float	$const5	1		%read{4,4} %write{2147483647,-1}
temp	int	$tmp1	%read{8,22} %write{8,22}
temp	int	$tmp2	%read{6,22} %write{7,22}
temp	point	$tmp3	%read{8,22} %write{8,22} %derivs
temp	float	$tmp4	%read{8,22} %write{8,22} %derivs
temp	float	$tmp5	%read{8,22} %write{8,22} %derivs
temp	float	$tmp6	%read{8,22} %write{8,22}
const	int	$const6	1		%read{22,22} %write{2147483647,-1}
temp	int	$tmp7	%read{2147483647,-1} %write{8,22}
temp	float	$tmp8	%read{25,25} %write{24,24}
code UVW
# <buffer>:10
# <file not found>
	functioncall	$const2 2 	%filename{"<buffer>"} %line{10} %argrw{"r"}
# OSL\stdosl.h:285
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	UVW $const3 $const1 P 	%filename{"OSL\stdosl.h"} %line{285} %argrw{"wrrr"}
code ___main___
# <buffer>:47
# <file not found>
	div		pnt UVW Scale 	%filename{"<buffer>"} %line{47} %argrw{"wrr"}
# <buffer>:49
# <file not found>
	assign		sum $const4 	%line{49} %argrw{"wr"}
# <buffer>:50
# <file not found>
	assign		curFreq $const5 	%line{50} %argrw{"wr"}
# <buffer>:51
# <file not found>
	assign		curAmp Amplitude 	%line{51} %argrw{"wr"}
# <buffer>:54
# <file not found>
	for		$tmp2 8 10 21 23 	%line{54} %argrw{"r"}
	assign		___325_i $const4 	%argrw{"wr"}
	lt		$tmp1 ___325_i Octaves 	%argrw{"wrr"}
	neq		$tmp2 $tmp1 $const4 	%argrw{"wrr"}
# <buffer>:57
# <file not found>
	mul		$tmp3 pnt curFreq 	%line{57} %argrw{"wrr"}
	assign		$tmp5 ___325_i 	%argrw{"wr"}
	add		$tmp4 Phase $tmp5 	%argrw{"wrr"}
	noise		___326_ns Type $tmp3 $tmp4 	%argrw{"wrrr"} %argderivs{2,3}
# <buffer>:59
# <file not found>
	if		StepFunction 16 16 	%line{59} %argrw{"r"}
# <buffer>:60
# <file not found>
	smoothstep	___326_ns LowStep HiStep ___326_ns 	%line{60} %argrw{"wrrr"}
# <buffer>:63
# <file not found>
	mul		$tmp6 ___326_ns curAmp 	%line{63} %argrw{"wrr"}
	add		Out Out $tmp6 	%argrw{"wrr"}
# <buffer>:65
# <file not found>
	add		sum sum curAmp 	%line{65} %argrw{"wrr"}
# <buffer>:68
# <file not found>
	mul		curFreq curFreq Lacunarity 	%line{68} %argrw{"wrr"}
# <buffer>:69
# <file not found>
	mul		curAmp curAmp Gain 	%line{69} %argrw{"wrr"}
# <buffer>:54
# <file not found>
	assign		$tmp7 ___325_i 	%line{54} %argrw{"wr"}
	add		___325_i ___325_i $const6 	%argrw{"wrr"}
# <buffer>:72
# <file not found>
	if		Normalize 26 26 	%line{72} %argrw{"r"}
# <buffer>:73
# <file not found>
	div		$tmp8 sum Amplitude 	%line{73} %argrw{"wrr"}
	div		Out Out $tmp8 	%argrw{"wrr"}
	end
