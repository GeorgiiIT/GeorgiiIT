OpenShadingLanguage 1.00
# Compiled by oslc 1.10.9
# options: -IC:/Program Files/Autodesk/3ds Max 2021/OSL/
shader OSLBitmap2	%meta{string,help,"Look up a bitmap from passed in UV coordinates<br/>(through OpenImageIO)"} %meta{string,label,"Bitmap Lookup"} %meta{string,version,"2.0"} 
param	point	Pos	0 0 0		%meta{string,label,"UV Coordinate"} %meta{string,help,"The 2D coordinate at which the texture is looked up."}  %read{4,4} %write{0,0} %derivs %initexpr
param	float	Scale	1		%meta{string,help,"A linear scale factor. For more complex UV manipulation, connect the UVWTransform."}  %read{4,4} %write{2147483647,-1} %derivs
param	string	Filename	""		%meta{string,widget,"filename"} %meta{string,label,"File name"} %meta{string,help,"The name of the texture to look up"}  %read{1,73} %write{2147483647,-1}
param	string	Filename_UDIMList	""		%meta{string,widget,"null"} %meta{string,label,"Viewport UDIM List"} %meta{string,help,"The list of UDIM items to load into the viewport. If empty, will be deduced from the file system automatically. "}  %read{2147483647,-1} %write{2147483647,-1}
param	string	LoadUDIM	"Load UDIM..."		%meta{string,widget,"max:actionButton"} %meta{string,actionID,"loadUDIM(\"Filename\")"} %meta{string,help,"Select a set of files to load as an UDIM."} %meta{int,connectable,0}  %read{2147483647,-1} %write{2147483647,-1}
param	int	UDIM	0		%meta{string,widget,"checkBox"} %meta{string,label,"UDIM-compatible lookup"} %meta{int,connectable,0} %meta{string,help,"Modifies the UV coordinate so that UDIM's are looked up similar to the max MultiTile map"}  %read{8,8} %write{2147483647,-1}
param	string	WrapMode	"periodic"		%meta{string,widget,"popup"} %meta{string,options,"default|black|clamp|periodic|mirror"} %meta{string,label,"Wrap Mode"} %meta{string,help,"How the texture wraps: (black, clamp, periodic or mirror)."}  %read{15,20} %write{2147483647,-1}
param	int	AutoGamma	1		%meta{string,widget,"checkBox"} %meta{int,connectable,0}  %read{44,44} %write{2147483647,-1}
param	float	ManualGamma	1		%meta{string,label,"Manual Gamma"}  %read{79,81} %write{2147483647,-1}
oparam	color	Col	0 0 0		%meta{string,label,"Col (RGB)"}  %read{78,85} %write{15,81}
oparam	float	R	0		%read{86,86} %write{82,82}
oparam	float	G	0		%read{86,86} %write{83,83}
oparam	float	B	0		%read{87,87} %write{84,84}
oparam	float	A	1		%read{2147483647,-1} %write{15,43}
oparam	float	Luminance	0		%read{2147483647,-1} %write{85,85}
oparam	float	Average	0		%read{2147483647,-1} %write{88,88}
global	float	u	%read{0,0} %write{2147483647,-1} %derivs
global	float	v	%read{0,0} %write{2147483647,-1} %derivs
local	point	p	%read{5,38} %write{4,4} %derivs
local	float	ulookup	%read{15,15} %write{5,5} %derivs
local	float	vlookup	%read{15,15} %write{7,14} %derivs
local	float	___325_vfloor	%read{12,14} %write{10,10} %derivs
local	float	___325_vfrac	%read{13,13} %write{12,12} %derivs
local	int	channels	%read{17,17} %write{16,16}
const	int	$const1	0		%read{5,82} %write{2147483647,-1}
const	float	$const2	0		%read{0,43} %write{2147483647,-1}
const	string	$const3	""		%read{1,1} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	float	$const4	1		%read{7,79} %write{2147483647,-1}
const	int	$const5	1		%read{6,83} %write{2147483647,-1}
temp	float	$tmp2	%read{7,7} %write{6,6} %derivs
temp	float	$tmp3	%read{10,10} %write{9,9} %derivs
temp	float	$tmp4	%read{12,12} %write{11,11} %derivs
temp	float	$tmp5	%read{14,14} %write{13,13} %derivs
const	string	$const6	"wrap"		%read{15,15} %write{2147483647,-1}
const	string	$const7	"alpha"		%read{15,15} %write{2147483647,-1}
temp	int	$tmp6	%read{2147483647,-1} %write{16,16}
const	string	$const8	"channels"		%read{16,16} %write{2147483647,-1}
const	int	$const9	4		%read{17,17} %write{2147483647,-1}
temp	int	$tmp7	%read{18,18} %write{17,17}
const	string	$const10	"black"		%read{20,20} %write{2147483647,-1}
temp	int	$tmp8	%read{21,21} %write{20,20}
temp	float	$tmp9	%read{23,23} %write{22,22}
temp	int	$tmp10	%read{24,24} %write{23,23}
temp	int	$tmp11	%read{25,30} %write{24,29}
temp	float	$tmp12	%read{27,27} %write{26,26}
temp	int	$tmp13	%read{28,28} %write{27,27}
temp	int	$tmp14	%read{29,29} %write{28,28}
temp	int	$tmp15	%read{31,36} %write{30,35}
temp	float	$tmp16	%read{33,33} %write{32,32}
temp	int	$tmp17	%read{34,34} %write{33,33}
temp	int	$tmp18	%read{35,35} %write{34,34}
temp	int	$tmp19	%read{37,42} %write{36,41}
temp	float	$tmp20	%read{39,39} %write{38,38}
temp	int	$tmp21	%read{40,40} %write{39,39}
temp	int	$tmp22	%read{41,41} %write{40,40}
temp	int	$tmp23	%read{46,46} %write{45,45}
const	string	$const11	".exr"		%read{45,45} %write{2147483647,-1}
temp	int	$tmp24	%read{47,47} %write{46,46}
temp	int	$tmp25	%read{48,53} %write{47,52}
temp	int	$tmp26	%read{50,50} %write{49,49}
const	string	$const12	".EXR"		%read{49,49} %write{2147483647,-1}
temp	int	$tmp27	%read{51,51} %write{50,50}
temp	int	$tmp28	%read{52,52} %write{51,51}
temp	int	$tmp29	%read{54,59} %write{53,58}
temp	int	$tmp30	%read{56,56} %write{55,55}
const	string	$const13	".hdr"		%read{55,55} %write{2147483647,-1}
temp	int	$tmp31	%read{57,57} %write{56,56}
temp	int	$tmp32	%read{58,58} %write{57,57}
temp	int	$tmp33	%read{60,65} %write{59,64}
temp	int	$tmp34	%read{62,62} %write{61,61}
const	string	$const14	".HDR"		%read{61,61} %write{2147483647,-1}
temp	int	$tmp35	%read{63,63} %write{62,62}
temp	int	$tmp36	%read{64,64} %write{63,63}
temp	int	$tmp37	%read{66,71} %write{65,70}
temp	int	$tmp38	%read{68,68} %write{67,67}
const	string	$const15	".tx"		%read{67,67} %write{2147483647,-1}
temp	int	$tmp39	%read{69,69} %write{68,68}
temp	int	$tmp40	%read{70,70} %write{69,69}
temp	int	$tmp41	%read{72,77} %write{71,76}
temp	int	$tmp42	%read{74,74} %write{73,73}
const	string	$const16	".TX"		%read{73,73} %write{2147483647,-1}
temp	int	$tmp43	%read{75,75} %write{74,74}
temp	int	$tmp44	%read{76,76} %write{75,75}
const	float	$const17	2.20000005		%read{78,78} %write{2147483647,-1}
temp	int	$tmp45	%read{80,80} %write{79,79}
const	int	$const18	2		%read{84,84} %write{2147483647,-1}
temp	float	$tmp46	%read{87,87} %write{86,86}
temp	float	$tmp47	%read{88,88} %write{87,87}
const	float	$const19	3		%read{88,88} %write{2147483647,-1}
code Pos
# OSL\OSLBitmap.osl:13
#   	[[  string label= "UV Coordinate", 
	point		Pos u v $const2 	%filename{"OSL\OSLBitmap.osl"} %line{13} %argrw{"wrrr"}
code ___main___
# OSL\OSLBitmap.osl:56
# 		return;
	eq		$tmp1 Filename $const3 	%filename{"OSL\OSLBitmap.osl"} %line{56} %argrw{"wrr"}
	if		$tmp1 4 4 	%argrw{"r"}
# OSL\OSLBitmap.osl:57
# 	
	exit	%line{57}
# OSL\OSLBitmap.osl:59
# 
	div		p Pos Scale 	%line{59} %argrw{"wrr"}
# OSL\OSLBitmap.osl:62
# 	float vlookup = 1.0 - p[1];
	compref		ulookup p $const1 	%line{62} %argrw{"wrr"}
# OSL\OSLBitmap.osl:63
# 	
	compref		$tmp2 p $const5 	%line{63} %argrw{"wrr"}
	sub		vlookup $const4 $tmp2 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:67
# 	{
	if		UDIM 15 15 	%line{67} %argrw{"r"}
# OSL\OSLBitmap.osl:69
# 		float vfrac   = p[1] - vfloor;
	compref		$tmp3 p $const5 	%line{69} %argrw{"wrr"}
	floor		___325_vfloor $tmp3 	%argrw{"wr"}
# OSL\OSLBitmap.osl:70
# 		vlookup = vfloor + (1.0 - vfrac);
	compref		$tmp4 p $const5 	%line{70} %argrw{"wrr"}
	sub		___325_vfrac $tmp4 ___325_vfloor 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:71
# 	}
	sub		$tmp5 $const4 ___325_vfrac 	%line{71} %argrw{"wrr"}
	add		vlookup ___325_vfloor $tmp5 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:74
# 	
	texture		Col Filename ulookup vlookup $const6 WrapMode $const7 A 	%line{74} %argrw{"wrrrrrrw"} %argderivs{2,3}
# OSL\OSLBitmap.osl:77
# 	if (channels < 4) // No alpha? Set it to opaque
	gettextureinfo	$tmp6 Filename $const8 channels 	%line{77} %argrw{"wrrw"}
# OSL\OSLBitmap.osl:78
# 	{
	lt		$tmp7 channels $const9 	%line{78} %argrw{"wrr"}
	if		$tmp7 44 44 	%argrw{"r"}
# OSL\OSLBitmap.osl:80
# 
	assign		A $const4 	%line{80} %argrw{"wr"}
# OSL\OSLBitmap.osl:82
# 		{
	eq		$tmp8 WrapMode $const10 	%line{82} %argrw{"wrr"}
	if		$tmp8 44 44 	%argrw{"r"}
# OSL\OSLBitmap.osl:84
# 			    p[1] < 0.0 || p[1] > 1.0)
	compref		$tmp9 p $const1 	%line{84} %argrw{"wrr"}
	lt		$tmp10 $tmp9 $const2 	%argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 26 30 	%argrw{"r"}
	compref		$tmp12 p $const1 	%argrw{"wrr"}
	gt		$tmp13 $tmp12 $const4 	%argrw{"wrr"}
	neq		$tmp14 $tmp13 $const1 	%argrw{"wrr"}
	assign		$tmp11 $tmp14 	%argrw{"wr"}
	neq		$tmp15 $tmp11 $const1 	%argrw{"wrr"}
	if		$tmp15 32 36 	%argrw{"r"}
# OSL\OSLBitmap.osl:85
# 			    A = 0.0;
	compref		$tmp16 p $const5 	%line{85} %argrw{"wrr"}
	lt		$tmp17 $tmp16 $const2 	%argrw{"wrr"}
	neq		$tmp18 $tmp17 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:84
# 			    p[1] < 0.0 || p[1] > 1.0)
	assign		$tmp15 $tmp18 	%line{84} %argrw{"wr"}
	neq		$tmp19 $tmp15 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:85
# 			    A = 0.0;
	if		$tmp19 38 42 	%line{85} %argrw{"r"}
	compref		$tmp20 p $const5 	%argrw{"wrr"}
	gt		$tmp21 $tmp20 $const4 	%argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	assign		$tmp19 $tmp22 	%argrw{"wr"}
# OSL\OSLBitmap.osl:84
# 			    p[1] < 0.0 || p[1] > 1.0)
	if		$tmp19 44 44 	%line{84} %argrw{"r"}
# OSL\OSLBitmap.osl:86
# 		}
	assign		A $const2 	%line{86} %argrw{"wr"}
# OSL\OSLBitmap.osl:92
# 	{
	if		AutoGamma 79 82 	%line{92} %argrw{"r"}
# OSL\OSLBitmap.osl:94
# 			!endswith(Filename, ".EXR") &&
	endswith	$tmp23 Filename $const11 	%line{94} %argrw{"wrr"}
	eq		$tmp24 $tmp23 $const1 	%argrw{"wrr"}
	neq		$tmp25 $tmp24 $const1 	%argrw{"wrr"}
	if		$tmp25 53 53 	%argrw{"r"}
# OSL\OSLBitmap.osl:95
# 			!endswith(Filename, ".hdr") &&
	endswith	$tmp26 Filename $const12 	%line{95} %argrw{"wrr"}
	eq		$tmp27 $tmp26 $const1 	%argrw{"wrr"}
	neq		$tmp28 $tmp27 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:94
# 			!endswith(Filename, ".EXR") &&
	assign		$tmp25 $tmp28 	%line{94} %argrw{"wr"}
	neq		$tmp29 $tmp25 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:95
# 			!endswith(Filename, ".hdr") &&
	if		$tmp29 59 59 	%line{95} %argrw{"r"}
# OSL\OSLBitmap.osl:96
# 			!endswith(Filename, ".HDR") &&
	endswith	$tmp30 Filename $const13 	%line{96} %argrw{"wrr"}
	eq		$tmp31 $tmp30 $const1 	%argrw{"wrr"}
	neq		$tmp32 $tmp31 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:95
# 			!endswith(Filename, ".hdr") &&
	assign		$tmp29 $tmp32 	%line{95} %argrw{"wr"}
	neq		$tmp33 $tmp29 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:96
# 			!endswith(Filename, ".HDR") &&
	if		$tmp33 65 65 	%line{96} %argrw{"r"}
# OSL\OSLBitmap.osl:97
# 			!endswith(Filename, ".tx")  &&
	endswith	$tmp34 Filename $const14 	%line{97} %argrw{"wrr"}
	eq		$tmp35 $tmp34 $const1 	%argrw{"wrr"}
	neq		$tmp36 $tmp35 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:96
# 			!endswith(Filename, ".HDR") &&
	assign		$tmp33 $tmp36 	%line{96} %argrw{"wr"}
	neq		$tmp37 $tmp33 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:97
# 			!endswith(Filename, ".tx")  &&
	if		$tmp37 71 71 	%line{97} %argrw{"r"}
# OSL\OSLBitmap.osl:98
# 			!endswith(Filename, ".TX"))
	endswith	$tmp38 Filename $const15 	%line{98} %argrw{"wrr"}
	eq		$tmp39 $tmp38 $const1 	%argrw{"wrr"}
	neq		$tmp40 $tmp39 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:97
# 			!endswith(Filename, ".tx")  &&
	assign		$tmp37 $tmp40 	%line{97} %argrw{"wr"}
	neq		$tmp41 $tmp37 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:98
# 			!endswith(Filename, ".TX"))
	if		$tmp41 77 77 	%line{98} %argrw{"r"}
# OSL\OSLBitmap.osl:99
# 		{
	endswith	$tmp42 Filename $const16 	%line{99} %argrw{"wrr"}
	eq		$tmp43 $tmp42 $const1 	%argrw{"wrr"}
	neq		$tmp44 $tmp43 $const1 	%argrw{"wrr"}
# OSL\OSLBitmap.osl:98
# 			!endswith(Filename, ".TX"))
	assign		$tmp41 $tmp44 	%line{98} %argrw{"wr"}
# OSL\OSLBitmap.osl:94
# 			!endswith(Filename, ".EXR") &&
	if		$tmp41 79 79 	%line{94} %argrw{"r"}
# OSL\OSLBitmap.osl:102
# 		}
	pow		Col Col $const17 	%line{102} %argrw{"wrr"}
# OSL\OSLBitmap.osl:107
# 			Col = pow(Col, ManualGamma);
	neq		$tmp45 ManualGamma $const4 	%line{107} %argrw{"wrr"}
	if		$tmp45 82 82 	%argrw{"r"}
# OSL\OSLBitmap.osl:108
# 	}
	pow		Col Col ManualGamma 	%line{108} %argrw{"wrr"}
# OSL\OSLBitmap.osl:111
# 	G = Col[1];
	compref		R Col $const1 	%line{111} %argrw{"wrr"}
# OSL\OSLBitmap.osl:112
# 	B = Col[2];
	compref		G Col $const5 	%line{112} %argrw{"wrr"}
# OSL\OSLBitmap.osl:113
# 	Luminance = luminance(Col);
	compref		B Col $const18 	%line{113} %argrw{"wrr"}
# OSL\OSLBitmap.osl:114
# 	Average   = (R + G + B) / 3.0;
	luminance	Luminance Col 	%line{114} %argrw{"wr"}
# OSL\OSLBitmap.osl:115
# }
	add		$tmp46 R G 	%line{115} %argrw{"wrr"}
	add		$tmp47 $tmp46 B 	%argrw{"wrr"}
	div		Average $tmp47 $const19 	%argrw{"wrr"}
	end
